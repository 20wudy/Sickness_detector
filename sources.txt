## Sources and Acknowledgments

The data from 5/11 to 6/11 is entirely generated by ChatGPT 2025 using the following prompt. 
"""
2025-05-11 00:00:00.000000,88.0,50.0,159.0,8.0,80.0

please, in the same format, generate 1 more month worth of data
"""

Tool to draw the graph for html, Debugging (ChatGPT 4o (basic) 12 June 2025)

The following sources to help me understand isolation forests:
https://medium.com/@limyenwee_19946/unsupervised-outlier-detection-with-isolation-forest-eab398c593b2 (showed me why it was the better choice, and also I found it interesting and wanted to learn more)
https://medium.com/@amit25173/isolation-forest-vs-random-forest-6e916623b8e5
https://www.geeksforgeeks.org/anomaly-detection-using-isolation-forest/ 
https://stats.stackexchange.com/questions/341455/validating-isolation-forests
https://scikit-learn.org/stable/modules/generated/sklearn.ensemble.IsolationForest.html
https://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.RobustScaler.html


Logging:
https://docs.python.org/3/library/logging.html
Logging syntax help on DeepSeek 2025 using the following prompts.
"""
Please explain how logging.error(f"Invalid input data: {input_data}") works after a try statememt
"""


The legal disclaimer in README was an edited version written by ChatGPT 2025 using the following prompt. 
"""
Please generate a legal disclaimer for a health tracking app that takes in smartwatch data
"""


Flask:
I ran into an issue when I passed in the wrong datatype for a parameter, and therefore asked DeepSeek 2025 the following prompt:
"""
I am passing data using post request using flask. However, I ran into the problem of Value errors; I attempted using try... except return "Invalid input: {str(e)}"; however, explain why this did not work.
"""

Other Resources that I used (mostly informative purposes or for previous code that is not deployed for this version)
https://www.nature.com/articles/s41591-020-1123-x
https://pubmed.ncbi.nlm.nih.gov/33334565/
https://www.nature.com/articles/s41551-020-00659-9
https://medium.com/@wainaina.pierre/the-complete-guide-to-time-series-forecasting-models-ef9c8cd40037
https://sintef.brage.unit.no/sintef-xmlui/bitstream/handle/11250/3055538/Machine_learning_for_fatigue_detection%2B%25288%2529.pdf?sequence=1&isAllowed=y
https://www.kaggle.com/datasets/arashnic/fitbit/data 

Last but not least, special thanks to whoever triggered the fire alarm 6/12 at 4:45 am. 